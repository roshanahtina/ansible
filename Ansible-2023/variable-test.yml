---
- hosts: web
  gather_facts: True
  become: yes
 
  vars:
    service_name: httpd
    service_status: status
    service_start: started
    service_restart: restarted
    service_stop: stopped
    service_reload: reloaded

  tasks:
  - name: START the httpd service
    ansible.builtin.service:
      name: "{{ service_name }}"
      state: "{{ service_start }}"
    register: httpdstartoutput
    tags: httpdstart
  - debug:
          msg: "{{ httpdstartoutput }}"
    tags: httpdstart
    
  - name: STOP the httpd service
    ansible.builtin.service:
      name: "{{ service_name }}"
      state: "{{ service_stop }}"
    register: httpdstopoutput
    tags: httpdstop
  - debug:
          msg: "{{ httpdstopoutput }}"
    tags: httpdstop
  
  - name: RESTART the httpd service
    ansible.builtin.service:
      name: "{{ service_name }}"
      state: "{{ service_restart }}"
    register: httpdresartoutput
    tags: httpdrestart
  - debug:
          msg: "{{ httpdresartoutput }}"
    tags: httpdrestart
  
  - name: Check the status of Apache service...
    ansible.builtin.shell: systemctl status "{{ service_name }}"
    register: httpdstatuslinesoutput
    tags: httpdstatuslines
    changed_when: false
  - debug:
          msg: |
            1. Command output of debugs {{ httpdstatuslinesoutput.cmd }}
            2.STDOUT_LINES of debugs {{ httpdstatuslinesoutput.stdout_lines }}
    tags: httpdstatuslines
    
  - name: Check the status of Apache service...
    ansible.builtin.shell: systemctl status "{{ service_name }}"
    register: httpdstatusoutput
    tags: httpdstatus
    changed_when: false
  - debug:
          msg: "{{ httpdstatusoutput }}"
    tags: httpdstatus

